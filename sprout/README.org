* compile circuit
download the zokrates-cli from <https://github.com/Zokrates/ZoKrates/releases/> to compile your `root.zok` and perform the setup phase
** compile
#+begin_src bash
  ./zokrates compile --stdlib-path stdlib -i root.zok
#+end_src
** perform the setup phase
#+begin_src bash
  ./zokrates setup
#+end_src
* create config
** build ioctl
+ clone iotex-core
  #+begin_src bash
    git@github.com:ioCarb/iotex-core.git
  #+end_src
+ compile ioctl
  in the iotex-core folder do
  #+begin_src bash
    make ioctl
  #+end_src
+ the binary will be  =iotex-core/bin/ioctl=, you can execute it from there or copy it to some location in your =$PATH=
  
** create a config file using ioctl:
the order doesn't matter and the default values for =-p= and =-k= are the same as below so feel free to not set these options
the =-e= field field is used for the proving scheme. Just use ~ioctl ws procject config --help~ for help 
#+begin_src bash
  ioctl ws project config -t "zokrates" -i out -e "g16" -p proving.key -k verification.key
#+end_src
copy the output config (default: =zokrates-config.json=) to =test/projects/20000=

#+begin_comment
currently the zokrates grpc server only accepts messages smaller then 15GB, so with message size = verify.key + proving.key + out, this could be changed tho.
#+end_comment

* "integrate" zokrates-sprout
when you're in the the parent folder of sprout
#+begin_src bash
  git clone git@github.com:ioCarb/zokrates-sprout.git
#+end_src

* start sprout
+ if you have run sprout before, make sure the =postgres= folder is deleted (you need to be root for this). (otherwise the docker build stage might throw errors)
+ stop and delete all docker containers (not sure if this is needed ðŸ¤·)
  #+begin_src bash
    [ -n "$(sudo docker ps -a -q)" ] && sudo docker stop $(sudo docker ps -a -q) || echo "No containers to stop" && [ -n "$(sudo docker ps -a -q)" ] && sudo docker rm $(sudo docker ps -a -q) || echo "No containers to remove"
  #+end_src
+ build, start and monitor sprout
  #+begin_src bash
    docker-compose build && docker compose -f docker-compose.yaml up -d && docker-compose logs -f coordinator sequencer prover zokrates
  #+end_src
  because of zokrates' compile times this will take forever, but if you dont change the zokrates-sprout code, the image/container will be cached

* send data
in a different window/tab run:
#+begin_src bash
  ioctl ws message send --project-id 20000 --project-version "0.1" --data "337 113569"
#+end_src
and look at the output of the docker log to see the generated proof
