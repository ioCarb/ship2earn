from "ecc/babyjubjubParams" import BabyJubJubParams;
import "signatures/verifyEddsa.zok" as verifyEddsa;
import "ecc/babyjubjubParams.zok" as context;

def distance(u32[8] M0, u32[8] M1) -> u32 {
    u32 latitude1 = M0[0];
    u32 longitude1 = M0[4];
    u32 latitude2 = M1[0];
    u32 longitude2 = M1[4];

    u32 diff_latitude = latitude2 - latitude1;
    u32 diff_longitude = longitude2 - longitude1;
    u32 km = diff_latitude + diff_longitude;

    return km;
}

def ratio(u32[8] M1) -> u32 {
    u32 result = M1[7]-1000000000;
    return result;
}



def main(field[2] R, field S, field[2] A, u32[8] M0, u32[8] M1) -> u32[2] {
    BabyJubJubParams context = context();
	assert(verifyEddsa(R, S, A, M0, M1, context));

    u32 km = distance(M0, M1);

    u32 vehicle = ratio(M1);
    
    u32 ratio = km * vehicle;

    return [km,ratio];
}